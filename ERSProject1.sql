DROP TABLE ERS_REIMBURSEMENT;
 -------------------TABLES----------------------

SELECT * FROM ERS_REIMBURSEMENT;
SELECT * FROM ERS_USERS;
SELECT * FROM ERS_REIMBURSEMENT_STATUS;
SELECT * FROM ERS_REIMBURSEMENT_TYPE;
SELECT * FROM ERS_USER_ROLE;


CREATE TABLE ERS_REIMBURSEMENT ( -- CREATING COLUMNS FOR OUR REIMBUSEMENT REQS.

    REIMB_ID        NUMBER,
    REIMB_AMT       NUMBER (20, 2) NOT NULL,
    REIMB_DESC      VARCHAR2(200),
    REIMB_RECEIPT   BLOB,
    REIMB_SUB       TIMESTAMP,
    REIMB_RESOLVED  TIMESTAMP,
    
-- CREATING FK FOR ADDITIONAL TABLES

    REIMB_AUTHOR    NUMBER NOT NULL,
    REIMB_RESOLVER  NUMBER, 
    REIMB_TYPEID    NUMBER NOT NULL, -- FOR LOGGING, FOOD, TRAVEL, OTHER
    REIMB_STATUSID  NUMBER NOT NULL,
    

 -- ASSIGNING THE CONSTRAINTS TO RESPECTIVE TABLES
    
    CONSTRAINT PK_REIMB_ID              PRIMARY KEY (REIMB_ID),
    CONSTRAINT FK_REIMB_AUTHOR          FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS (USERS_ID),
    CONSTRAINT FK_REIMB_RESOLVER        FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS (USERS_ID),
    CONSTRAINT FK_REIMB_TYPEID          FOREIGN KEY (REIMB_TYPEID) REFERENCES ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID),
    CONSTRAINT FK_REIMB_STATUSID        FOREIGN KEY (REIMB_STATUSID) REFERENCES ERS_REIMBURSEMENT_STATUS (REIMB_STATUS_ID)
    
);

CREATE TABLE ERS_USERS ( -- CREATING COLUMNS FOR OUR USER DESC 

    USERS_ID        NUMBER,
    USERNAME        VARCHAR2 (25) NOT NULL,
    U_PASSWORD      VARCHAR2 (30) NOT NULL, 
    U_FIRSTNAME     VARCHAR2 (30),
    U_LASTNAME      VARCHAR2 (30), 
    U_EMAIL         VARCHAR2 (40),
    U_ROLEID        NUMBER,
    
 -- ASSIGNING THE CONSTRAINTS TO RESPECTIVE TABLES

    CONSTRAINT PK_USERS_ID      PRIMARY KEY (USERS_ID),
    CONSTRAINT FK_U_ROLEID      FOREIGN KEY (U_ROLEID) REFERENCES ERS_USER_ROLE    (USER_ROLE_ID),
    CONSTRAINT USERNAME_UN      UNIQUE (USERNAME),
    CONSTRAINT U_EMAIL_UN       UNIQUE (U_EMAIL)
);

CREATE TABLE ERS_REIMBURSEMENT_STATUS (  -- CREATING COLUMNS FOR OUR STATUS DESC 

    REIMB_STATUS_ID         NUMBER NOT NULL, 
    REIMB_STATUS            VARCHAR (15) NOT NULL,
    
 -- ASSIGNING THE CONSTRAINTS TO RESPECTIVE TABLES
    
    CONSTRAINT PK_REIMB_STATUS_ID       PRIMARY KEY (REIMB_STATUS_ID)
);

CREATE TABLE ERS_REIMBURSEMENT_TYPE ( -- CREATING COLUMNS FOR OUR REIMB TYPE DESC 

    REIMB_TYPE_ID       NUMBER NOT NULL, 
    REIMB_TYPE          VARCHAR2 (10) NOT NULL,
    
 -- ASSIGNING THE CONSTRAINTS TO RESPECTIVE TABLES

    CONSTRAINT PK_REIMB_TYPE_ID     PRIMARY KEY (REIMB_TYPE_ID)
);

CREATE TABLE ERS_USER_ROLE ( -- CREATING COLUMNS FOR OUR USER ROLE DESC 

    USER_ROLE_ID       NUMBER NOT NULL, 
    USER_ROLE          VARCHAR2 (10),
    
 -- ASSIGNING THE CONSTRAINTS TO RESPECTIVE TABLES

    CONSTRAINT PK_USER_ROLE_ID      PRIMARY KEY (USER_ROLE_ID)
);

    ---------------------SEQUENCES-------------------------

CREATE SEQUENCE SQ_PK_ERS_REIMBURSEMENT
    START WITH 1
    INCREMENT BY 1;
/
CREATE SEQUENCE SQ_PK_ERS_USERS
    START WITH 1
    INCREMENT BY 1;
/

CREATE SEQUENCE SQ_PK_ERS_REIMBURSEMENT_STATUS
    START WITH 1
    INCREMENT BY 1;
/

CREATE SEQUENCE SQ_PK_ERS_REIMBURSEMENT_TYPE
    START WITH 1
    INCREMENT BY 1;
/

CREATE SEQUENCE SQ_PK_ERS_USER_ROLE
    INCREMENT BY 1;
/

   ------------------------TRIGGERS--------------------------

DROP TRIGGER TR_INSERT_REIMBURSEMENT;
DROP TRIGGER TR_INSERT_USERS;
DROP TRIGGER TR_INSERT_REIMBURSEMENT_STATUS;
DROP TRIGGER TR_INSERT_REIMBURSEMENT_TYPE;
DROP TRIGGER TR_INSERT_USER_ROLE;


CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT
BEFORE INSERT ON ERS_REIMBURSEMENT
FOR EACH ROW 
BEGIN
    SELECT SQ_PK_ERS_REIMBURSEMENT.NEXTVAL INTO :NEW.REIMB_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_USERS
BEFORE INSERT ON ERS_USERS
FOR EACH ROW 
BEGIN
    SELECT SQ_PK_ERS_USERS.NEXTVAL INTO :NEW.USERS_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT_STATUS
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW 
BEGIN
    SELECT SQ_PK_ERS_REIMBURSEMENT_STATUS.NEXTVAL INTO :NEW.REIMB_STATUS_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT_TYPE
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW 
BEGIN
    SELECT SQ_PK_ERS_REIMBURSEMENT_TYPE.NEXTVAL INTO :NEW.REIMB_TYPE_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_USER_ROLE
BEFORE INSERT ON ERS_USER_ROLE
FOR EACH ROW 
BEGIN
    SELECT SQ_PK_ERS_USER_ROLE.NEXTVAL INTO :NEW. USER_ROLE_ID FROM DUAL;
END;
/

INSERT INTO ERS_USERS VALUES (USERS_ID, USERNAME, U_PASSWORD, U_FIRSTNAME, U_LASTNAME, U_EMAIL, U_ROLEID);

INSERT INTO ERS_USERS VALUES (1, 'pvalenz', 'papa', 'Peter', 'Valenzuela', 'papajohns@pizza.com', 1);

INSERT INTO ERS_REIMBURSEMENT VALUES (0, 120, 'Food', null, null, null, 1, 1, 2, 0);


INSERT INTO ERS_USER_ROLE VALUES (1,'Manager');
INSERT INTO ERS_USER_ROLE VALUES (2,'Employee');

INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (0,'Lodging');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (1,'Travel');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (2,'Food');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (3,'Other');

INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (0, 'Pending');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (1, 'Approved');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (2, 'Denied');




